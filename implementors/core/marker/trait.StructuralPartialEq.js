(function() {var implementors = {
"lambda_extension":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"lambda_extension/struct.ExtensionError.html\" title=\"struct lambda_extension::ExtensionError\">ExtensionError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"lambda_extension/struct.LambdaLog.html\" title=\"struct lambda_extension::LambdaLog\">LambdaLog</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"lambda_extension/enum.LambdaLogRecord.html\" title=\"enum lambda_extension::LambdaLogRecord\">LambdaLogRecord</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"lambda_extension/struct.LogPlatformReportMetrics.html\" title=\"struct lambda_extension::LogPlatformReportMetrics\">LogPlatformReportMetrics</a>"]],
"lambda_runtime":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"lambda_runtime/struct.Context.html\" title=\"struct lambda_runtime::Context\">Context</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"lambda_runtime/struct.Config.html\" title=\"struct lambda_runtime::Config\">Config</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()